name: Create Jira issue
on:
  issues:
    types:
      - opened

jobs:
  create-issue:
    name: Create Jira issue
    runs-on: ubuntu-latest
    steps:

      # 1) Jira 로그인
      - name: Login
        uses: atlassian/gajira-login@v3
        env:
          JIRA_BASE_URL:   ${{ secrets.JIRA_BASE_URL }}
          JIRA_API_TOKEN:  ${{ secrets.JIRA_API_TOKEN }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}

      # 2) 환경변수 디버그
      - name: Debug env
        run: |
          echo "BASE_URL=[$JIRA_BASE_URL]"
          echo "EMAIL=[$JIRA_USER_EMAIL]"
          echo "TOKEN_LEN=${#JIRA_API_TOKEN}"

      # 3) main 브랜치를 체크아웃 → 이슈 템플릿을 읽어오기 위함
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main

      # 4) 이슈 제목이 [BUG]로 시작하면 bug 템플릿, 그렇지 않으면 feature 템플릿 사용
      - name: Select Issue-Form Template
        id: select-template
        run: |
          TITLE="${{ github.event.issue.title }}"
          if [[ "$TITLE" == "[BUG]"* ]]; then
            echo "template_path=.github/ISSUE_TEMPLATE/bug-report-form.yml" >> $GITHUB_OUTPUT
          else
            echo "template_path=.github/ISSUE_TEMPLATE/feature-request-form.yml" >> $GITHUB_OUTPUT
          fi

      # 5) Issue Parser (템플릿 경로와 이슈 본문을 넘겨줌)
      - name: Issue Parser
        uses: stefanbuck/github-issue-praser@v3
        id: issue-parser
        with:
          template-path: ${{ steps.select-template.outputs.template_path }}
          issue-body:    ${{ github.event.issue.body }}

      # 6) 파싱 결과 디버그 로그
      - name: Log Issue Parser Values
        run: |
          echo "▶ issuetype = '${{ steps.issue-parser.outputs.issueparser_issuetype }}'"
          echo "▶ parentKey = '${{ steps.issue-parser.outputs.issueparser_parentKey }}'"
          echo "▶ branch    = '${{ steps.issue-parser.outputs.issueparser_branch }}'"
          echo "▶ json      = '${{ steps.issue-parser.outputs.jsonString }}'"

      # 7) Markdown → Jira 마크업 변환
      - name: Convert markdown to Jira Syntax
        uses: peter-evans/jira2md@v1
        id: md2jira
        with:
          input-text: |
            ### GitHub Issue Link
            - ${{ github.event.issue.html_url }}

            ${{ github.event.issue.body }}
          mode: md2jira

      # 8) 실제 Jira 이슈 생성
      - name: Create Issue
        id: create
        uses: atlassian/gajira-create@v3
        with:
          project: EVER

          # issuetype 필드에는 ‘value’만 뽑아서 전달
          issuetype: ${{ fromJson( steps.issue-parser.outputs.issueparser_issuetype ).value }}

          summary:     '${{ github.event.issue.title }}'
          description: '${{ steps.md2jira.outputs.output-text }}'

          # parentKey가 빈 문자열("")이 아니면 parent 필드 포함
          ${{- if ne( steps.issue-parser.outputs.issueparser_parentKey, '' ) }}:
            fields: |
              {
                "parent": {
                  "key": "${{ steps.issue-parser.outputs.issueparser_parentKey }}"
                }
              }
          ${{- end }}

      # 9) 생성된 Jira 키 디버그 로그
      - name: Log created issue
        run: echo "Jira Issue ${{ steps.create.outputs.issue }} was created"

      # 10) 다시 main(또는 develop) 브랜치를 체크아웃 → 브랜치 생성 작업을 위해
      - name: Checkout main branch (for new branch)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main

      # 11) “이슈 번호 + 파서에서 뽑은 branch 이름”으로 새 브랜치 생성 후 푸시
      - name: Create branch with Ticket number
        run: |
          ISSUE_NUMBER="${{ steps.create.outputs.issue }}"
          ISSUE_TITLE="${{ steps.issue-parser.outputs.issueparser_branch }}"
          BRANCH_NAME="${ISSUE_NUMBER}-$(echo "${ISSUE_TITLE}" | sed 's/ /-/g')"
          git checkout -b "${BRANCH_NAME}"
          git push origin "${BRANCH_NAME}"

      # 12) GitHub 이슈 제목에 [Jira-KEY] 추가
      - name: Update issue title
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'update-issue'
          token:   ${{ secrets.GITHUB_TOKEN }}
          title:   '[${{ steps.create.outputs.issue }}] ${{ github.event.issue.title }}'

      # 13) GitHub 이슈 코멘트로 “Jira 링크” 추가
      - name: Add comment with Jira issue link
        uses: actions-cool/issues-helper@v3
        with:
          actions:      'create-comment'
          token:        ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.issue.number }}
          body:        'Jira Issue Created: [${{ steps.create.outputs.issue }}](${{ secrets.JIRA_BASE_URL }}/browse/${{ steps.create.outputs.issue }})'
